{ "name": "RangeSlider",
  "memberOf": "$w",
  "mixes":
    [ "$w.Element",
      "$w.ValueMixin",
      "$w.DisabledMixin",
      "$w.HiddenCollapsedMixin",
      "$w.FocusMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "RangeSlider.js" },
  "docs":
    { "summary": "Range Sliders allow users to select a range of values from a given range.",
      "description":
        [ "Range sliders, like sliders, can be used for filtering data, or gathering numeric ",
          " input from a site visitor. Range sliders offer two handles to set a min and max ",
          " value along a numeric track. You can set the range values of the slider, as well ",
          " as the deafult handle values. You might use a range slider so that a site visitor ",
          " can choose a price range for their online shopping purposes. ",
          "",
          " Range sliders also support a single handle allowing it to function like a [slider]." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "label",
        "labels": [],
        "get": true,
        "set": true,
        "type": "string",
        "locations":
          [ { "lineno": 27,
              "filename": "RangeSlider.js" },
            { "lineno": 38,
              "filename": "RangeSlider.js" } ],
        "docs":
          { "summary": "Sets or gets the label of the range slider.",
            "links": [],
            "examples":
              [ { "title": "Get a range slider's label",
                  "body":
                    [ "let rangeSliderLabel = $w('#myRangeSlider').label; // Set a range value" ],
                  "extra":
                    {  } },
                { "title": "Set a range slider's label",
                  "body":
                    [ "$w('#myRangeSlider').label = \"Set a range value\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "max",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 63,
              "filename": "RangeSlider.js" },
            { "lineno": 74,
              "filename": "RangeSlider.js" } ],
        "docs":
          { "summary": "Sets or gets the range slider track's maximum value.",
            "links": [],
            "examples":
              [ { "title": "Get a range slider's maximum value",
                  "body":
                    [ "let rangeSliderMax = $w('#myRangeSlider').max; // 100" ],
                  "extra":
                    {  } },
                { "title": "Set a range slider's maximum value",
                  "body":
                    [ "$w('#myRangeSlider').max = 100;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "min",
        "labels": [],
        "get": true,
        "set": true,
        "type": "number",
        "locations":
          [ { "lineno": 45,
              "filename": "RangeSlider.js" },
            { "lineno": 56,
              "filename": "RangeSlider.js" } ],
        "docs":
          { "summary": "Sets or gets the range slider track's minimum value.",
            "links": [],
            "examples":
              [ { "title": "Get a range slider's minimum value",
                  "body":
                    [ "let rangeSliderMin = $w('#myRangeSlider').min; // 0" ],
                  "extra":
                    {  } },
                { "title": "Set a range slider's minimum value",
                  "body":
                    [ "$w('#myRangeSlider').min = 0;" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "sliderType",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "defaultValue": "\"Continuous\"",
        "locations":
          [ { "lineno": 81,
              "filename": "RangeSlider.js" },
            { "lineno": 103,
              "filename": "RangeSlider.js" } ],
        "docs":
          { "summary": "Sets or gets the range slider's type.",
            "description":
              [ "The `sliderType` can be set as one of the following:",
                "",
                " - `\"Continuous\"`: Continous sliders have a step value of 0.1 that cannot ",
                "    be changed. When a handle is moved along the slider, it's numeric ",
                "    value goes up or down by 0.1.  ",
                " - `\"Stepped\"`: Stepped sliders have a step value that can adjusted to a ",
                "    specific value made available by the [`step`](#step) property. Stepped ",
                "    sliders will display tick marks based it's step value." ],
            "links": [],
            "examples":
              [ { "title": "Get a range slider's type",
                  "body":
                    [ "let rangeSliderType = $w('#myRangeSlider').sliderType; // \"Stepped\"" ],
                  "extra":
                    {  } },
                { "title": "Set a range slider's type",
                  "body":
                    [ "$w('#myRangeSlider').sliderType = \"Stepped\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "stepType",
        "labels":
          [ "changed" ],
        "get": true,
        "set": true,
        "type": "string",
        "defaultValue": "\"Number\"",
        "locations":
          [ { "lineno": 110,
              "filename": "RangeSlider.js" },
            { "lineno": 134,
              "filename": "RangeSlider.js" } ],
        "docs":
          { "summary": "Sets or gets the range slider's step type.",
            "description":
              [ "The `stepType` can be one of the following:",
                " - `\"Number\"`: The number of steps is determined by the [`step`](#step) ",
                "   property's value. For example, suppose a slider has a [`min`](#min)",
                "   value of `0`, [`max`](#max) value of `10`, and [`step`](#max) value ",
                "   of `5`. There will be 5 steps, meaning each step will be 2 units. ",
                "  ",
                " - `\"Value\"`: Each step's size is equal to the number of units defined by ",
                "    the [`step`](#step) property's value. For example, suppose a slider has",
                "    a [`min`](#min) value of 0, [`max`](#max)  value of 10, and [`step`](#step) ",
                "    value of 5. Each step size will be 5 unites, meaning there will be two 2 steps." ],
            "links": [],
            "examples":
              [ { "title": "Set a range slider's type",
                  "body":
                    [ "$w('#myRangeSlider').stepType = \"Number\";" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations": [],
  "callbacks": [],
  "messages": [],
  "extra":
    { "queryable": true } }