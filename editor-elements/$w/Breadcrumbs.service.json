{ "name": "Breadcrumbs",
  "memberOf": "$w",
  "mixes":
    [ "$w.HiddenCollapsedMixin",
      "$w.ViewportMixin" ],
  "labels":
    [ "changed" ],
  "location":
    { "lineno": 1,
      "filename": "Breadcrumbs.js" },
  "docs":
    { "summary": "Breadcrumbs are used for navigating between site pages.",
      "description":
        [ "Breadcrumbs help site visitors navigate from page to page on a site. For example: ",
          "",
          "![Sample breadcrumbs](images/breadcrumbs.png \"Breadcrumbs\")",
          "",
          " With Velo, you can customize breadcrumb items by changing their labels, links, and icons. ",
          "",
          " You can use Velo to add breadcrumbs ",
          " to dynamic pages, which is not supported in the Wix Editor. ",
          " ",
          " `Breadcrumbs` consist of sets of labels, icons, and links. When the site visitor clicks",
          " a label or an icon, they navigate to the corresponding link. ",
          "",
          " Icons are vector image files ",
          " from the Media Manager, an external SVG image from any web location, or a literal SVG XML string.",
          "",
          " Breadcrumb item links are optional. It is unnecessary, for example, to add a link for the item that represents the ",
          " current page because there is no reason to navigate to it." ],
      "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties":
    [ { "name": "isEllipsisVisible",
        "labels":
          [ "changed" ],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "lineno": 141,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Indicates if the ellipsis is displayed in the breadcrumbs trail.",
            "description":
              [ "To change the `isEllipsisVisible` property, use the [showEllipsis()](#showEllipsis) and [hideEllipsis()](#hideEllipsis) functions." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [itemsBeforeEllipsis](#itemsBeforeEllipsis), [showEllipsis](#showEllipsis), [hideEllipsis](#hideEllipsis)" ],
            "examples":
              [ { "title": "Check if the ellipsis is displayed in the breadcrumbs trail",
                  "body":
                    [ "let ellipsisStatus = $w(\"#myBreadcrumbs\").isEllipsisVisible;" ],
                  "extra":
                    {  } },
                { "title": "Set a button to toggle the ellipsis in the breadcrumbs trail when clicked",
                  "body":
                    [ "$w(\"#myButton\").onClick((e) => {",
                      "    if($w(\"#myBreadcrumbs\").isEllipsisVisible){",
                      "        $w(\"#myBreadcrumbs\").hideEllipsis();",
                      "    } else {",
                      "        $w(\"#myBreadcrumbs\").showEllipsis();",
                      "    }",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "items",
        "labels": [],
        "get": true,
        "set": true,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.Breadcrumbs.Item" ] },
        "defaultValue": "An empty array",
        "locations":
          [ { "lineno": 53,
              "filename": "Breadcrumbs.js" },
            { "lineno": 103,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Sets or gets `Breadcrumbs` items.",
            "description":
              [ "Setting the `items` property sets the items",
                " for `Breadcrumbs`.",
                "",
                " Set `items` to an empty array (`[]`) to remove all breadcrumb items.",
                "",
                " Getting the `items` property returns `Breadcrumbs` items that have been set using code. If no",
                " items have been set using code, an empty array is returned. Note that even if the items have not been ",
                " set with code, the `Breadcrumbs` element on the site ",
                " still works. The items are set according to the organization of the site's pages and the ",
                " site visitor's location.",
                "",
                " Fields that do not have a value are omitted from the returned array.",
                "",
                " You cannot modify the items array in-place. To add, change, or remove",
                " individual breadcrumb items:",
                "",
                "   1. Store the value of the `items` property in a variable.",
                "   1. Make changes to the variable's array of items.",
                "   1. Reset the `items` property with the variable's modified array." ],
            "links": [],
            "examples":
              [ { "title": "Get breadcrumb items",
                  "body":
                    [ "// This example assumes the items were set",
                      "// using code.",
                      "",
                      "let breadcrumbItems = $w(\"#myBreadcrumbs\").items;",
                      "let firstIcon = breadcrumbItems[0].icon;  ",
                      "",
                      "/* Sample array of breadcrumb items: ",
                      " * [",
                      " *   {",
                      " *     \"icon\": \"wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/\",",
                      " *     \"link\": \"https://user.wixsite.com\"",
                      " *   },",
                      " *   {",
                      " *     \"label\": \"Venue\",",
                      " *     \"link\": \"https://user.wixsite.com/zoo\"",
                      " *   },",
                      " *   {",
                      " *     \"label\": \"Animal\",",
                      " *     \"link\": \"https://user.wixsite.com/zoo/lions\"",
                      " *   }",
                      " * ]",
                      " * ",
                      " * In the 1st item, label is undefined. ",
                      " * In the last 2 items, icon is undefined.",
                      " */" ],
                  "extra":
                    {  } },
                { "title": "Set items for various kinds of breadcrumbs",
                  "body":
                    [ "// Premium site: \"https://domain.com/zoo/\"",
                      "$w(\"#myBreadcrumbs\").items = [",
                      "  {\"icon\": \"wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/\", \"link\": \"https://domain.com\"},",
                      "  {\"label\": \"Venue\", \"link\": \"https://domain.com/zoo\"},",
                      "  {\"label\": \"Animal\", \"link\": \"https://domain.com/zoo/lions\"}",
                      "];",
                      "",
                      "// Free site: \"https://user.wixsite.com/zoo/\"",
                      "$w(\"#myBreadcrumbs\").items = [",
                      "  {\"icon\": \"wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/\", \"link\": \"https://user.wixsite.com\"},",
                      "  {\"label\": \"Venue\", \"link\": \"https://user.wixsite.com/zoo\"},",
                      "  {\"label\": \"Animal\", \"link\": \"https://user.wixsite.com/zoo/lions\"}",
                      "];",
                      "",
                      "// Free site with multiple icon breadcrumb items:  \"https://user.wixsite.com/zoo/\"",
                      "$w(\"#myBreadcrumbs\").items = [",
                      "  {\"icon\": \"wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/\", \"link\": \"https://user.wixsite.com\"},",
                      "  {\"label\": \"Venue\", \"link\": \"https://user.wixsite.com/zoo\"},",
                      "  {\"icon\": \"<svg width=\"50\" height=\"50\"><circle cx=\"25\" cy=\"25\" r=\"20\" stroke=\"red\" stroke-width=\"5\" fill=\"blue\"/></svg>\", \"link\": \"https://user.wixsite.com/zoo/lions\"}",
                      "];",
                      "",
                      "// Premium site with no links for only displaying the context: ",
                      "$w(\"#myBreadcrumbs\").items = [",
                      "  {\"icon\": \"wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/\"},",
                      "  {\"label\": \"Zoo\"},",
                      "  {\"label\": \"Tiger\"}",
                      "];" ],
                  "extra":
                    {  } },
                { "title": "Add a breadcrumb items",
                  "body":
                    [ "let crumbs = $w(\"#myBreadcrumbs\").items;",
                      "crumbs.push({\"label\": \"My New Label\", \"link\": \"https://mydomain.wixsite.com/mynewlink\"});",
                      "$w(\"#myBreadcrumbs\").items = crumbs;" ],
                  "extra":
                    { "description": "This example retrieves the breadcrumb items, adds a new\n item, and then overwrites the old items." } },
                { "title": "Set breadcrumb items for dynamic pages using Wix Location",
                  "body":
                    [ "import wixData from 'wix-data';",
                      "import wixLocation from 'wix-location';",
                      "",
                      "$w.onReady(function () {",
                      "  $w(\"#tourismDynamicDataset\").onReady(() => {",
                      "    wixData.query('tourism')",
                      "      .eq('country', \"Italy\")",
                      "      .find()",
                      "      .then((results) => {",
                      "        let firstPlaceToSee = results.items[0]",
                      "        $w(\"#customBreadcrumbs\").items = [",
                      "          { ",
                      "            icon: \"wix:vector://v1/4c47c6_d6f8a5ad487c416399846a79a524196f.svg/\", ",
                      "            link: wixLocation.baseUrl + \"/\" ",
                      "          },",
                      "          { ",
                      "            label: \"Places to See\", ",
                      "            link: wixLocation.baseUrl + firstPlaceToSee[\"link-tourism-all\"] ",
                      "          },",
                      "          { ",
                      "            label: firstPlaceToSee.title, ",
                      "            link: wixLocation.baseUrl + firstPlaceToSee[\"link-tourism-title\"] ",
                      "          }",
                      "        ]",
                      "      });",
                      "  })",
                      "});" ],
                  "extra":
                    { "description": "This example demonstrates how to customize breadcrumbs for dynamic pages.\n\n > **Note**: In the interest of simplicity the code does not deal with display considerations\n > or validations that would normally be required to make sure site visitors perform the flow as \n > intended. \n\nThe customization includes: \n\n+ A \"tourism\" collection that contains countries and places to visit. The example queries for places to visit in Italy. \n+ 2 dynamic pages: \n    + A dynamic list page called \"Tourism (All)\" that lists travel destinations (places). The link to this dynamic page is based on the Wix Location \"baseUrl\" and the prefix in the \"link-tourism-all\" collection field.\n    + A dynamic item page called \"Tourism (Title)\" for viewing a specific place. The link to this dynamic page is based on the Wix Location \"baseUrl\" and the path in the \"link-tourism-title\" collection field. \n+ A Breadcrumbs element created with code. Breadcrumbs elements should be added to all pages. This \n  example sets the \"customBreadCrumbs\" element for the \"Tourism (Title)\" dynamic item page." } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "itemsAfterEllipsis",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 167,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Sets or gets number of items that appear in the breadcrumbs trail after the ellipsis.",
            "description":
              [ "The value of `itemsAfterEllipsis` must be greater than 1 and less than the total number of items in the breadcrumbs trail." ],
            "links":
              [ "[itemsBeforeEllipsis](#itemsAfterEllipsis), [showEllipsis](#showEllipsis), [hideEllipsis](#hideEllipsis), [isEllipsisVisible](#isEllipsisVisible)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "itemsBeforeEllipsis",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "lineno": 155,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Sets or gets the number of items that appear in the breadcrumbs trail before the ellipsis.",
            "description":
              [ "The value of `itemsBeforeEllipsis` must be greater than 1 and less than the total number of items in the breadcrumbs trail." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [showEllipsis](#showEllipsis), [hideEllipsis](#hideEllipsis), [isEllipsisVisible](#isEllipsisVisible)" ],
            "examples": [],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "operations":
    [ { "name": "hideEllipsis",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 125,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Causes a breadcrumbs element to display the middle items of the breadcrumbs trail instead of an ellipsis.",
            "description":
              [ "The number of items displayed in the breadcrumbs trail when you invoke `hideEllipsis()` depends on the values of the `itemsBeforeEllipsis` ",
                "and `itemsAfterEllipsis` properties. Any items not accounted for by those properties are displayed in stead of the ellipsis.",
                "",
                "For example, if your breadcrumbs trail includes 5 items and `itemsBeforeEllipsis` and `itemsAfterEllipsis` are both set to 1, the 3 middle items in the trail",
                "are displayed when you invoke `hideEllipsis()`." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [itemsBeforeEllipsis](#itemsBeforeEllipsis), [isEllipsisVisible](#isEllipsisVisible), [showEllipsis](#showEllipsis)" ],
            "examples":
              [ { "title": "Display the middle items in the breadcrumbs trails",
                  "body":
                    [ "$w(\"#myBreadcrumbs\").hideEllipsis();" ],
                  "extra":
                    {  } },
                { "title": "Display the middle items in the breadcrumbs trail after clicking a button",
                  "body":
                    [ "$w('#myButton').onClick(() => {",
                      "    $w('#myBreadcrumbs').hideEllipsis();",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "showEllipsis",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "lineno": 109,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "Causes a breadcrumbs element to display an ellipsis instead of the middle items of the breadcrumbs trail.",
            "description":
              [ "The number of items hidden in the breadcrumbs trail when you invoke `showEllipsis()` depends on the values of the `itemsBeforeEllipsis` ",
                "and `itemsAfterEllipsis` properties. Any items not accounted for by those properties are hidden and replaced by an ellipsis.",
                "",
                "For example, if your breadcrumbs trail includes 5 items and `itemsBeforeEllipsis` and `itemsAfterEllipsis` are both set to 1, the 3 middle items in the trail",
                "are hidden when you invoke `showEllipsis()`." ],
            "links":
              [ "[itemsAfterEllipsis](#itemsAfterEllipsis), [itemsBeforeEllipsis](#itemsBeforeEllipsis), [isEllipsisVisible](#isEllipsisVisible), [hideEllipsis](#hideEllipsis)" ],
            "examples":
              [ { "title": "Display a ellipsis in the breadcrumbs trail",
                  "body":
                    [ "$w(\"#myBreadcrumbs\").showEllipsis();" ],
                  "extra":
                    {  } },
                { "title": "Display an ellipsis after clicking a button",
                  "body":
                    [ "$w('#myButton').onClick(() => {",
                      "    $w('#myBreadcrumbs').showEllipsis();",
                      "})" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Item",
        "locations":
          [ { "lineno": 30,
              "filename": "Breadcrumbs.js" } ],
        "docs":
          { "summary": "An object that contains the attributes of a `Breadcrumbs` item.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "label",
              "type": "string",
              "doc": "The label of the breadcrumb item. This is text that the site visitor sees and can click to navigate. Required if `icon` is not specified. If not specified, the `label` key is omitted from the returned array.",
              "optional": true },
            { "name": "icon",
              "type": "string",
              "doc": "The icon of the breadcrumb item. This is a vector image that the site visitor sees and can click to navigate. Required if `label` is not specified. If not specified,  the `icon` key is omitted from the returned array.\n\n The vector image file can be an image file from the Media Manager, an external SVG image from any web location, or a literal SVG XML string.\n\n The formats supported are:\n + Vector images from the Media Manager: `wix:vector://v1/<vector_uri>/<filename>`\n + Vector images from the web: `http(s)://<vector image url>`\n + Vector XML string: `<svg>...</svg>`",
              "optional": true },
            { "name": "link",
              "type": "string",
              "doc": "Optional link for the breadcrumb item as a valid URL. This is the link the site visitor navigates to. The page opens in the same window/tab. \n\n The link is generally not visible but, depending on the browser, it is often displayed as a tooltip when hovering over the breadcrumbs. \n\n If a link is not specified, it is `undefined` in the breadcrumbs object. The corresponding label or icon is not clickable. You can use this convention, for example, to include the current page in the breadcrumbs for\n display purposes.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    { "queryable": true } }